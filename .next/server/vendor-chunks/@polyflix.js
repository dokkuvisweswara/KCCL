"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@polyflix";
exports.ids = ["vendor-chunks/@polyflix"];
exports.modules = {

/***/ "(ssr)/./node_modules/@polyflix/vtt-parser/dist/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@polyflix/vtt-parser/dist/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.VttFile = exports.Block = void 0;\nvar models_1 = __webpack_require__(/*! ./models */ \"(ssr)/./node_modules/@polyflix/vtt-parser/dist/models/index.js\");\nObject.defineProperty(exports, \"Block\", ({\n    enumerable: true,\n    get: function() {\n        return models_1.Block;\n    }\n}));\nObject.defineProperty(exports, \"VttFile\", ({\n    enumerable: true,\n    get: function() {\n        return models_1.VttFile;\n    }\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbHlmbGl4L3Z0dC1wYXJzZXIvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZUFBZSxHQUFHQSxhQUFhLEdBQUcsS0FBSztBQUN2QyxJQUFJSSxXQUFXQyxtQkFBT0EsQ0FBQyxnRkFBVTtBQUNqQ1AseUNBQXdDO0lBQUVRLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9ILFNBQVNELEtBQUs7SUFBRTtBQUFFLENBQUMsRUFBQztBQUMxR0wsMkNBQTBDO0lBQUVRLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9ILFNBQVNGLE9BQU87SUFBRTtBQUFFLENBQUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYm9yaW1lZGlhaW1wbC8uL25vZGVfbW9kdWxlcy9AcG9seWZsaXgvdnR0LXBhcnNlci9kaXN0L2luZGV4LmpzPzdkZDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZ0dEZpbGUgPSBleHBvcnRzLkJsb2NrID0gdm9pZCAwO1xudmFyIG1vZGVsc18xID0gcmVxdWlyZShcIi4vbW9kZWxzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQmxvY2tcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZGVsc18xLkJsb2NrOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVnR0RmlsZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kZWxzXzEuVnR0RmlsZTsgfSB9KTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlZ0dEZpbGUiLCJCbG9jayIsIm1vZGVsc18xIiwicmVxdWlyZSIsImVudW1lcmFibGUiLCJnZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polyflix/vtt-parser/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polyflix/vtt-parser/dist/models/block.model.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@polyflix/vtt-parser/dist/models/block.model.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Block = void 0;\n/**\n * Modelize a block of subtitle.\n * In a VTT file, we have something like that for a section :\n *\n * 1\n * 00:00:03.500 --> 00:00:05.000\n * Everyone wants the most from life\n *\n * This class aims to modelize this section in another format, like JSON.\n */ var Block = /** @class */ function() {\n    function Block(sequence, startTime, endTime, text) {\n        this.sequence = sequence;\n        this.startTime = startTime;\n        this.endTime = endTime;\n        this.text = text;\n    }\n    /**\n     * Create a default block\n     * @param {number} idx the sequence index\n     * @returns {Block} the block instance\n     */ Block.default = function(idx) {\n        return new Block(idx, 0, 0, \"\");\n    };\n    return Block;\n}();\nexports.Block = Block;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbHlmbGl4L3Z0dC1wYXJzZXIvZGlzdC9tb2RlbHMvYmxvY2subW9kZWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGFBQWEsR0FBRyxLQUFLO0FBQ3JCOzs7Ozs7Ozs7Q0FTQyxHQUNELElBQUlFLFFBQVEsV0FBVyxHQUFJO0lBQ3ZCLFNBQVNBLE1BQU1DLFFBQVEsRUFBRUMsU0FBUyxFQUFFQyxPQUFPLEVBQUVDLElBQUk7UUFDN0MsSUFBSSxDQUFDSCxRQUFRLEdBQUdBO1FBQ2hCLElBQUksQ0FBQ0MsU0FBUyxHQUFHQTtRQUNqQixJQUFJLENBQUNDLE9BQU8sR0FBR0E7UUFDZixJQUFJLENBQUNDLElBQUksR0FBR0E7SUFDaEI7SUFDQTs7OztLQUlDLEdBQ0RKLE1BQU1LLE9BQU8sR0FBRyxTQUFVQyxHQUFHO1FBQ3pCLE9BQU8sSUFBSU4sTUFBTU0sS0FBSyxHQUFHLEdBQUc7SUFDaEM7SUFDQSxPQUFPTjtBQUNYO0FBQ0FGLGFBQWEsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJvcmltZWRpYWltcGwvLi9ub2RlX21vZHVsZXMvQHBvbHlmbGl4L3Z0dC1wYXJzZXIvZGlzdC9tb2RlbHMvYmxvY2subW9kZWwuanM/MTZiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQmxvY2sgPSB2b2lkIDA7XG4vKipcbiAqIE1vZGVsaXplIGEgYmxvY2sgb2Ygc3VidGl0bGUuXG4gKiBJbiBhIFZUVCBmaWxlLCB3ZSBoYXZlIHNvbWV0aGluZyBsaWtlIHRoYXQgZm9yIGEgc2VjdGlvbiA6XG4gKlxuICogMVxuICogMDA6MDA6MDMuNTAwIC0tPiAwMDowMDowNS4wMDBcbiAqIEV2ZXJ5b25lIHdhbnRzIHRoZSBtb3N0IGZyb20gbGlmZVxuICpcbiAqIFRoaXMgY2xhc3MgYWltcyB0byBtb2RlbGl6ZSB0aGlzIHNlY3Rpb24gaW4gYW5vdGhlciBmb3JtYXQsIGxpa2UgSlNPTi5cbiAqL1xudmFyIEJsb2NrID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEJsb2NrKHNlcXVlbmNlLCBzdGFydFRpbWUsIGVuZFRpbWUsIHRleHQpIHtcbiAgICAgICAgdGhpcy5zZXF1ZW5jZSA9IHNlcXVlbmNlO1xuICAgICAgICB0aGlzLnN0YXJ0VGltZSA9IHN0YXJ0VGltZTtcbiAgICAgICAgdGhpcy5lbmRUaW1lID0gZW5kVGltZTtcbiAgICAgICAgdGhpcy50ZXh0ID0gdGV4dDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgZGVmYXVsdCBibG9ja1xuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBpZHggdGhlIHNlcXVlbmNlIGluZGV4XG4gICAgICogQHJldHVybnMge0Jsb2NrfSB0aGUgYmxvY2sgaW5zdGFuY2VcbiAgICAgKi9cbiAgICBCbG9jay5kZWZhdWx0ID0gZnVuY3Rpb24gKGlkeCkge1xuICAgICAgICByZXR1cm4gbmV3IEJsb2NrKGlkeCwgMCwgMCwgXCJcIik7XG4gICAgfTtcbiAgICByZXR1cm4gQmxvY2s7XG59KCkpO1xuZXhwb3J0cy5CbG9jayA9IEJsb2NrO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQmxvY2siLCJzZXF1ZW5jZSIsInN0YXJ0VGltZSIsImVuZFRpbWUiLCJ0ZXh0IiwiZGVmYXVsdCIsImlkeCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polyflix/vtt-parser/dist/models/block.model.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polyflix/vtt-parser/dist/models/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@polyflix/vtt-parser/dist/models/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./block.model */ \"(ssr)/./node_modules/@polyflix/vtt-parser/dist/models/block.model.js\"), exports);\n__exportStar(__webpack_require__(/*! ./vtt-file.model */ \"(ssr)/./node_modules/@polyflix/vtt-parser/dist/models/vtt-file.model.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbHlmbGl4L3Z0dC1wYXJzZXIvZGlzdC9tb2RlbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsSUFBSyxJQUFJLElBQUksQ0FBQ0EsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkosT0FBT08sY0FBYyxDQUFDTCxHQUFHRyxJQUFJO1FBQUVHLFlBQVk7UUFBTUMsS0FBSztZQUFhLE9BQU9OLENBQUMsQ0FBQ0MsRUFBRTtRQUFFO0lBQUU7QUFDdEYsSUFBTSxTQUFTRixDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQ3RCLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCRixDQUFDLENBQUNHLEdBQUcsR0FBR0YsQ0FBQyxDQUFDQyxFQUFFO0FBQ2hCLENBQUM7QUFDRCxJQUFJTSxlQUFlLElBQUssSUFBSSxJQUFJLENBQUNBLFlBQVksSUFBSyxTQUFTUCxDQUFDLEVBQUVRLFFBQU87SUFDakUsSUFBSyxJQUFJQyxLQUFLVCxFQUFHLElBQUlTLE1BQU0sYUFBYSxDQUFDWixPQUFPYSxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixVQUFTQyxJQUFJYixnQkFBZ0JZLFVBQVNSLEdBQUdTO0FBQzNIO0FBQ0FaLDhDQUE2QztJQUFFZ0IsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RE4sYUFBYU8sbUJBQU9BLENBQUMsMkZBQWUsR0FBR047QUFDdkNELGFBQWFPLG1CQUFPQSxDQUFDLGlHQUFrQixHQUFHTiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYm9yaW1lZGlhaW1wbC8uL25vZGVfbW9kdWxlcy9AcG9seWZsaXgvdnR0LXBhcnNlci9kaXN0L21vZGVscy9pbmRleC5qcz9iOTA1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYmxvY2subW9kZWxcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Z0dC1maWxlLm1vZGVsXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6WyJfX2NyZWF0ZUJpbmRpbmciLCJPYmplY3QiLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIl9fZXhwb3J0U3RhciIsImV4cG9ydHMiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwidmFsdWUiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polyflix/vtt-parser/dist/models/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polyflix/vtt-parser/dist/models/timestamp.model.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@polyflix/vtt-parser/dist/models/timestamp.model.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Timestamp = void 0;\nvar Timestamp = /** @class */ function() {\n    function Timestamp(startTime, endTime) {\n        this.startTime = startTime;\n        this.endTime = endTime;\n    }\n    /**\n     * Parse à timestamp from a raw and return an instance of Timestamp.\n     * @param {string} timestamp the timestamp to parse\n     * @param {string} marker the marker for split timestamp\n     * @returns {Timestamp} the timestamp parsed\n     */ Timestamp.fromRaw = function(timestamp, marker) {\n        var _a = timestamp.split(marker), startTimeRaw = _a[0], endTimeRaw = _a[1];\n        if (!endTimeRaw) return;\n        var startTimeValues = Timestamp.splitTimestamp(startTimeRaw);\n        var endTimeValues = Timestamp.splitTimestamp(endTimeRaw.trim().split(\" \")[0]);\n        return new Timestamp(Timestamp.toMilliseconds(startTimeValues), Timestamp.toMilliseconds(endTimeValues));\n    };\n    /**\n     * Split a raw timestamp to a SplittedTimestamp.\n     * @param {string} timestamp the raw timestamp\n     * @returns {SplittedTimestamp} the splitted timestamp\n     */ Timestamp.splitTimestamp = function(timestamp) {\n        var _a = timestamp.split(\":\"), hours = _a[0], minutes = _a[1], _b = _a[2], secondsAndMilliseconds = _b === void 0 ? \"\" : _b;\n        var millisecondSeparator = secondsAndMilliseconds.includes(\",\") ? \",\" : secondsAndMilliseconds.includes(\".\") ? \".\" : \"\";\n        var _c = secondsAndMilliseconds.split(millisecondSeparator), seconds = _c[0], milliseconds = _c[1];\n        return {\n            h: Number(hours),\n            m: Number(minutes),\n            s: Number(seconds),\n            ms: Number(milliseconds)\n        };\n    };\n    /**\n     * Convert a splitted timestamp to a milliseconds timestamp\n     * @param param0\n     * @returns\n     */ Timestamp.toMilliseconds = function(_a) {\n        var _b = _a.h, h = _b === void 0 ? 0 : _b, _c = _a.m, m = _c === void 0 ? 0 : _c, _d = _a.s, s = _d === void 0 ? 0 : _d, _e = _a.ms, ms = _e === void 0 ? 0 : _e;\n        return h * 3600000 + m * 60000 + s * 1000 + ms;\n    };\n    return Timestamp;\n}();\nexports.Timestamp = Timestamp;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbHlmbGl4L3Z0dC1wYXJzZXIvZGlzdC9tb2RlbHMvdGltZXN0YW1wLm1vZGVsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxpQkFBaUIsR0FBRyxLQUFLO0FBQ3pCLElBQUlFLFlBQVksV0FBVyxHQUFJO0lBQzNCLFNBQVNBLFVBQVVDLFNBQVMsRUFBRUMsT0FBTztRQUNqQyxJQUFJLENBQUNELFNBQVMsR0FBR0E7UUFDakIsSUFBSSxDQUFDQyxPQUFPLEdBQUdBO0lBQ25CO0lBQ0E7Ozs7O0tBS0MsR0FDREYsVUFBVUcsT0FBTyxHQUFHLFNBQVVDLFNBQVMsRUFBRUMsTUFBTTtRQUMzQyxJQUFJQyxLQUFLRixVQUFVRyxLQUFLLENBQUNGLFNBQVNHLGVBQWVGLEVBQUUsQ0FBQyxFQUFFLEVBQUVHLGFBQWFILEVBQUUsQ0FBQyxFQUFFO1FBQzFFLElBQUksQ0FBQ0csWUFDRDtRQUNKLElBQUlDLGtCQUFrQlYsVUFBVVcsY0FBYyxDQUFDSDtRQUMvQyxJQUFJSSxnQkFBZ0JaLFVBQVVXLGNBQWMsQ0FBQ0YsV0FBV0ksSUFBSSxHQUFHTixLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDNUUsT0FBTyxJQUFJUCxVQUFVQSxVQUFVYyxjQUFjLENBQUNKLGtCQUFrQlYsVUFBVWMsY0FBYyxDQUFDRjtJQUM3RjtJQUNBOzs7O0tBSUMsR0FDRFosVUFBVVcsY0FBYyxHQUFHLFNBQVVQLFNBQVM7UUFDMUMsSUFBSUUsS0FBS0YsVUFBVUcsS0FBSyxDQUFDLE1BQU1RLFFBQVFULEVBQUUsQ0FBQyxFQUFFLEVBQUVVLFVBQVVWLEVBQUUsQ0FBQyxFQUFFLEVBQUVXLEtBQUtYLEVBQUUsQ0FBQyxFQUFFLEVBQUVZLHlCQUF5QkQsT0FBTyxLQUFLLElBQUksS0FBS0E7UUFDekgsSUFBSUUsdUJBQXVCRCx1QkFBdUJFLFFBQVEsQ0FBQyxPQUNyRCxNQUNBRix1QkFBdUJFLFFBQVEsQ0FBQyxPQUM1QixNQUNBO1FBQ1YsSUFBSUMsS0FBS0gsdUJBQXVCWCxLQUFLLENBQUNZLHVCQUF1QkcsVUFBVUQsRUFBRSxDQUFDLEVBQUUsRUFBRUUsZUFBZUYsRUFBRSxDQUFDLEVBQUU7UUFDbEcsT0FBTztZQUNIRyxHQUFHQyxPQUFPVjtZQUNWVyxHQUFHRCxPQUFPVDtZQUNWVyxHQUFHRixPQUFPSDtZQUNWTSxJQUFJSCxPQUFPRjtRQUNmO0lBQ0o7SUFDQTs7OztLQUlDLEdBQ0R2QixVQUFVYyxjQUFjLEdBQUcsU0FBVVIsRUFBRTtRQUNuQyxJQUFJVyxLQUFLWCxHQUFHa0IsQ0FBQyxFQUFFQSxJQUFJUCxPQUFPLEtBQUssSUFBSSxJQUFJQSxJQUFJSSxLQUFLZixHQUFHb0IsQ0FBQyxFQUFFQSxJQUFJTCxPQUFPLEtBQUssSUFBSSxJQUFJQSxJQUFJUSxLQUFLdkIsR0FBR3FCLENBQUMsRUFBRUEsSUFBSUUsT0FBTyxLQUFLLElBQUksSUFBSUEsSUFBSUMsS0FBS3hCLEdBQUdzQixFQUFFLEVBQUVBLEtBQUtFLE9BQU8sS0FBSyxJQUFJLElBQUlBO1FBQzlKLE9BQU9OLElBQUksVUFBVUUsSUFBSSxRQUFRQyxJQUFJLE9BQU9DO0lBQ2hEO0lBQ0EsT0FBTzVCO0FBQ1g7QUFDQUYsaUJBQWlCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2Vib3JpbWVkaWFpbXBsLy4vbm9kZV9tb2R1bGVzL0Bwb2x5ZmxpeC92dHQtcGFyc2VyL2Rpc3QvbW9kZWxzL3RpbWVzdGFtcC5tb2RlbC5qcz85MGUxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UaW1lc3RhbXAgPSB2b2lkIDA7XG52YXIgVGltZXN0YW1wID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFRpbWVzdGFtcChzdGFydFRpbWUsIGVuZFRpbWUpIHtcbiAgICAgICAgdGhpcy5zdGFydFRpbWUgPSBzdGFydFRpbWU7XG4gICAgICAgIHRoaXMuZW5kVGltZSA9IGVuZFRpbWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBhcnNlIMOgIHRpbWVzdGFtcCBmcm9tIGEgcmF3IGFuZCByZXR1cm4gYW4gaW5zdGFuY2Ugb2YgVGltZXN0YW1wLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0aW1lc3RhbXAgdGhlIHRpbWVzdGFtcCB0byBwYXJzZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtYXJrZXIgdGhlIG1hcmtlciBmb3Igc3BsaXQgdGltZXN0YW1wXG4gICAgICogQHJldHVybnMge1RpbWVzdGFtcH0gdGhlIHRpbWVzdGFtcCBwYXJzZWRcbiAgICAgKi9cbiAgICBUaW1lc3RhbXAuZnJvbVJhdyA9IGZ1bmN0aW9uICh0aW1lc3RhbXAsIG1hcmtlcikge1xuICAgICAgICB2YXIgX2EgPSB0aW1lc3RhbXAuc3BsaXQobWFya2VyKSwgc3RhcnRUaW1lUmF3ID0gX2FbMF0sIGVuZFRpbWVSYXcgPSBfYVsxXTtcbiAgICAgICAgaWYgKCFlbmRUaW1lUmF3KVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB2YXIgc3RhcnRUaW1lVmFsdWVzID0gVGltZXN0YW1wLnNwbGl0VGltZXN0YW1wKHN0YXJ0VGltZVJhdyk7XG4gICAgICAgIHZhciBlbmRUaW1lVmFsdWVzID0gVGltZXN0YW1wLnNwbGl0VGltZXN0YW1wKGVuZFRpbWVSYXcudHJpbSgpLnNwbGl0KFwiIFwiKVswXSk7XG4gICAgICAgIHJldHVybiBuZXcgVGltZXN0YW1wKFRpbWVzdGFtcC50b01pbGxpc2Vjb25kcyhzdGFydFRpbWVWYWx1ZXMpLCBUaW1lc3RhbXAudG9NaWxsaXNlY29uZHMoZW5kVGltZVZhbHVlcykpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogU3BsaXQgYSByYXcgdGltZXN0YW1wIHRvIGEgU3BsaXR0ZWRUaW1lc3RhbXAuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHRpbWVzdGFtcCB0aGUgcmF3IHRpbWVzdGFtcFxuICAgICAqIEByZXR1cm5zIHtTcGxpdHRlZFRpbWVzdGFtcH0gdGhlIHNwbGl0dGVkIHRpbWVzdGFtcFxuICAgICAqL1xuICAgIFRpbWVzdGFtcC5zcGxpdFRpbWVzdGFtcCA9IGZ1bmN0aW9uICh0aW1lc3RhbXApIHtcbiAgICAgICAgdmFyIF9hID0gdGltZXN0YW1wLnNwbGl0KFwiOlwiKSwgaG91cnMgPSBfYVswXSwgbWludXRlcyA9IF9hWzFdLCBfYiA9IF9hWzJdLCBzZWNvbmRzQW5kTWlsbGlzZWNvbmRzID0gX2IgPT09IHZvaWQgMCA/IFwiXCIgOiBfYjtcbiAgICAgICAgdmFyIG1pbGxpc2Vjb25kU2VwYXJhdG9yID0gc2Vjb25kc0FuZE1pbGxpc2Vjb25kcy5pbmNsdWRlcyhcIixcIilcbiAgICAgICAgICAgID8gXCIsXCJcbiAgICAgICAgICAgIDogc2Vjb25kc0FuZE1pbGxpc2Vjb25kcy5pbmNsdWRlcyhcIi5cIilcbiAgICAgICAgICAgICAgICA/IFwiLlwiXG4gICAgICAgICAgICAgICAgOiBcIlwiO1xuICAgICAgICB2YXIgX2MgPSBzZWNvbmRzQW5kTWlsbGlzZWNvbmRzLnNwbGl0KG1pbGxpc2Vjb25kU2VwYXJhdG9yKSwgc2Vjb25kcyA9IF9jWzBdLCBtaWxsaXNlY29uZHMgPSBfY1sxXTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGg6IE51bWJlcihob3VycyksXG4gICAgICAgICAgICBtOiBOdW1iZXIobWludXRlcyksXG4gICAgICAgICAgICBzOiBOdW1iZXIoc2Vjb25kcyksXG4gICAgICAgICAgICBtczogTnVtYmVyKG1pbGxpc2Vjb25kcyksXG4gICAgICAgIH07XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBDb252ZXJ0IGEgc3BsaXR0ZWQgdGltZXN0YW1wIHRvIGEgbWlsbGlzZWNvbmRzIHRpbWVzdGFtcFxuICAgICAqIEBwYXJhbSBwYXJhbTBcbiAgICAgKiBAcmV0dXJuc1xuICAgICAqL1xuICAgIFRpbWVzdGFtcC50b01pbGxpc2Vjb25kcyA9IGZ1bmN0aW9uIChfYSkge1xuICAgICAgICB2YXIgX2IgPSBfYS5oLCBoID0gX2IgPT09IHZvaWQgMCA/IDAgOiBfYiwgX2MgPSBfYS5tLCBtID0gX2MgPT09IHZvaWQgMCA/IDAgOiBfYywgX2QgPSBfYS5zLCBzID0gX2QgPT09IHZvaWQgMCA/IDAgOiBfZCwgX2UgPSBfYS5tcywgbXMgPSBfZSA9PT0gdm9pZCAwID8gMCA6IF9lO1xuICAgICAgICByZXR1cm4gaCAqIDM2MDAwMDAgKyBtICogNjAwMDAgKyBzICogMTAwMCArIG1zO1xuICAgIH07XG4gICAgcmV0dXJuIFRpbWVzdGFtcDtcbn0oKSk7XG5leHBvcnRzLlRpbWVzdGFtcCA9IFRpbWVzdGFtcDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlRpbWVzdGFtcCIsInN0YXJ0VGltZSIsImVuZFRpbWUiLCJmcm9tUmF3IiwidGltZXN0YW1wIiwibWFya2VyIiwiX2EiLCJzcGxpdCIsInN0YXJ0VGltZVJhdyIsImVuZFRpbWVSYXciLCJzdGFydFRpbWVWYWx1ZXMiLCJzcGxpdFRpbWVzdGFtcCIsImVuZFRpbWVWYWx1ZXMiLCJ0cmltIiwidG9NaWxsaXNlY29uZHMiLCJob3VycyIsIm1pbnV0ZXMiLCJfYiIsInNlY29uZHNBbmRNaWxsaXNlY29uZHMiLCJtaWxsaXNlY29uZFNlcGFyYXRvciIsImluY2x1ZGVzIiwiX2MiLCJzZWNvbmRzIiwibWlsbGlzZWNvbmRzIiwiaCIsIk51bWJlciIsIm0iLCJzIiwibXMiLCJfZCIsIl9lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polyflix/vtt-parser/dist/models/timestamp.model.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polyflix/vtt-parser/dist/models/vtt-builder.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@polyflix/vtt-parser/dist/models/vtt-builder.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.VttBuilder = void 0;\n/**\n * Helper class to easily create VTT file from string\n */ var VttBuilder = /** @class */ function() {\n    function VttBuilder(counter, content) {\n        if (counter === void 0) {\n            counter = 0;\n        }\n        if (content === void 0) {\n            content = \"WEBVTT\\r\\n\";\n        }\n        this.counter = counter;\n        this.content = content;\n    }\n    /**\n     * Create a default block\n     * @param {number} idx the sequence index\n     * @returns {Block} the block instance\n     */ VttBuilder.prototype.add = function(from, to, line, settings) {\n        var _this = this;\n        this.counter++;\n        var lines = line.constructor === Array ? line : [\n            line\n        ];\n        this.content += \"\\r\\n\" + this.counter.toString() + \"\\r\\n\" + secondsToTime(from) + \" --> \" + secondsToTime(to) + (settings ? \" \" + settings : \"\") + \"\\r\\n\";\n        lines.forEach(function(line) {\n            _this.content += line + \"\\r\\n\";\n        });\n        return this.content;\n    };\n    VttBuilder.prototype.toString = function() {\n        return this.content;\n    };\n    return VttBuilder;\n}();\nexports.VttBuilder = VttBuilder;\nfunction secondsToTime(sec) {\n    function pad(num) {\n        if (num < 10) {\n            return \"0\" + num;\n        }\n        return num;\n    }\n    var seconds = +(sec % 60).toFixed(3).toString();\n    var minutes = Math.floor(sec / 60) % 60;\n    var hours = Math.floor(sec / 60 / 60);\n    return pad(hours) + \":\" + pad(minutes) + \":\" + pad(seconds) + \".000\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBvbHlmbGl4L3Z0dC1wYXJzZXIvZGlzdC9tb2RlbHMvdnR0LWJ1aWxkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGtCQUFrQixHQUFHLEtBQUs7QUFDMUI7O0NBRUMsR0FDRCxJQUFJRSxhQUFhLFdBQVcsR0FBSTtJQUM1QixTQUFTQSxXQUFXQyxPQUFPLEVBQUVDLE9BQU87UUFDaEMsSUFBSUQsWUFBWSxLQUFLLEdBQUc7WUFBRUEsVUFBVTtRQUFHO1FBQ3ZDLElBQUlDLFlBQVksS0FBSyxHQUFHO1lBQUVBLFVBQVU7UUFBYztRQUNsRCxJQUFJLENBQUNELE9BQU8sR0FBR0E7UUFDZixJQUFJLENBQUNDLE9BQU8sR0FBR0E7SUFDbkI7SUFDQTs7OztLQUlDLEdBQ0RGLFdBQVdHLFNBQVMsQ0FBQ0MsR0FBRyxHQUFHLFNBQVVDLElBQUksRUFBRUMsRUFBRSxFQUFFQyxJQUFJLEVBQUVDLFFBQVE7UUFDekQsSUFBSUMsUUFBUSxJQUFJO1FBQ2hCLElBQUksQ0FBQ1IsT0FBTztRQUNaLElBQUlTLFFBQVFILEtBQUtJLFdBQVcsS0FBS0MsUUFBUUwsT0FBTztZQUFDQTtTQUFLO1FBQ3RELElBQUksQ0FBQ0wsT0FBTyxJQUNSLFNBQ0ksSUFBSSxDQUFDRCxPQUFPLENBQUNZLFFBQVEsS0FDckIsU0FDQUMsY0FBY1QsUUFDZCxVQUNBUyxjQUFjUixNQUNiRSxDQUFBQSxXQUFXLE1BQU1BLFdBQVcsRUFBQyxJQUM5QjtRQUNSRSxNQUFNSyxPQUFPLENBQUMsU0FBVVIsSUFBSTtZQUN4QkUsTUFBTVAsT0FBTyxJQUFJSyxPQUFPO1FBQzVCO1FBQ0EsT0FBTyxJQUFJLENBQUNMLE9BQU87SUFDdkI7SUFDQUYsV0FBV0csU0FBUyxDQUFDVSxRQUFRLEdBQUc7UUFDNUIsT0FBTyxJQUFJLENBQUNYLE9BQU87SUFDdkI7SUFDQSxPQUFPRjtBQUNYO0FBQ0FGLGtCQUFrQixHQUFHRTtBQUNyQixTQUFTYyxjQUFjRSxHQUFHO0lBQ3RCLFNBQVNDLElBQUlDLEdBQUc7UUFDWixJQUFJQSxNQUFNLElBQUk7WUFDVixPQUFPLE1BQU1BO1FBQ2pCO1FBQ0EsT0FBT0E7SUFDWDtJQUNBLElBQUlDLFVBQVUsQ0FBQyxDQUFDSCxNQUFNLEVBQUMsRUFBR0ksT0FBTyxDQUFDLEdBQUdQLFFBQVE7SUFDN0MsSUFBSVEsVUFBVUMsS0FBS0MsS0FBSyxDQUFDUCxNQUFNLE1BQU07SUFDckMsSUFBSVEsUUFBUUYsS0FBS0MsS0FBSyxDQUFDUCxNQUFNLEtBQUs7SUFDbEMsT0FBT0MsSUFBSU8sU0FBUyxNQUFNUCxJQUFJSSxXQUFXLE1BQU1KLElBQUlFLFdBQVc7QUFDbEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJvcmltZWRpYWltcGwvLi9ub2RlX21vZHVsZXMvQHBvbHlmbGl4L3Z0dC1wYXJzZXIvZGlzdC9tb2RlbHMvdnR0LWJ1aWxkZXIuanM/MGE2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVnR0QnVpbGRlciA9IHZvaWQgMDtcbi8qKlxuICogSGVscGVyIGNsYXNzIHRvIGVhc2lseSBjcmVhdGUgVlRUIGZpbGUgZnJvbSBzdHJpbmdcbiAqL1xudmFyIFZ0dEJ1aWxkZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVnR0QnVpbGRlcihjb3VudGVyLCBjb250ZW50KSB7XG4gICAgICAgIGlmIChjb3VudGVyID09PSB2b2lkIDApIHsgY291bnRlciA9IDA7IH1cbiAgICAgICAgaWYgKGNvbnRlbnQgPT09IHZvaWQgMCkgeyBjb250ZW50ID0gXCJXRUJWVFRcXHJcXG5cIjsgfVxuICAgICAgICB0aGlzLmNvdW50ZXIgPSBjb3VudGVyO1xuICAgICAgICB0aGlzLmNvbnRlbnQgPSBjb250ZW50O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBkZWZhdWx0IGJsb2NrXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGlkeCB0aGUgc2VxdWVuY2UgaW5kZXhcbiAgICAgKiBAcmV0dXJucyB7QmxvY2t9IHRoZSBibG9jayBpbnN0YW5jZVxuICAgICAqL1xuICAgIFZ0dEJ1aWxkZXIucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uIChmcm9tLCB0bywgbGluZSwgc2V0dGluZ3MpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy5jb3VudGVyKys7XG4gICAgICAgIHZhciBsaW5lcyA9IGxpbmUuY29uc3RydWN0b3IgPT09IEFycmF5ID8gbGluZSA6IFtsaW5lXTtcbiAgICAgICAgdGhpcy5jb250ZW50ICs9XG4gICAgICAgICAgICBcIlxcclxcblwiICtcbiAgICAgICAgICAgICAgICB0aGlzLmNvdW50ZXIudG9TdHJpbmcoKSArXG4gICAgICAgICAgICAgICAgXCJcXHJcXG5cIiArXG4gICAgICAgICAgICAgICAgc2Vjb25kc1RvVGltZShmcm9tKSArXG4gICAgICAgICAgICAgICAgXCIgLS0+IFwiICtcbiAgICAgICAgICAgICAgICBzZWNvbmRzVG9UaW1lKHRvKSArXG4gICAgICAgICAgICAgICAgKHNldHRpbmdzID8gXCIgXCIgKyBzZXR0aW5ncyA6IFwiXCIpICtcbiAgICAgICAgICAgICAgICBcIlxcclxcblwiO1xuICAgICAgICBsaW5lcy5mb3JFYWNoKGZ1bmN0aW9uIChsaW5lKSB7XG4gICAgICAgICAgICBfdGhpcy5jb250ZW50ICs9IGxpbmUgKyBcIlxcclxcblwiO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGVudDtcbiAgICB9O1xuICAgIFZ0dEJ1aWxkZXIucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb250ZW50O1xuICAgIH07XG4gICAgcmV0dXJuIFZ0dEJ1aWxkZXI7XG59KCkpO1xuZXhwb3J0cy5WdHRCdWlsZGVyID0gVnR0QnVpbGRlcjtcbmZ1bmN0aW9uIHNlY29uZHNUb1RpbWUoc2VjKSB7XG4gICAgZnVuY3Rpb24gcGFkKG51bSkge1xuICAgICAgICBpZiAobnVtIDwgMTApIHtcbiAgICAgICAgICAgIHJldHVybiBcIjBcIiArIG51bTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVtO1xuICAgIH1cbiAgICB2YXIgc2Vjb25kcyA9ICsoc2VjICUgNjApLnRvRml4ZWQoMykudG9TdHJpbmcoKTtcbiAgICB2YXIgbWludXRlcyA9IE1hdGguZmxvb3Ioc2VjIC8gNjApICUgNjA7XG4gICAgdmFyIGhvdXJzID0gTWF0aC5mbG9vcihzZWMgLyA2MCAvIDYwKTtcbiAgICByZXR1cm4gcGFkKGhvdXJzKSArIFwiOlwiICsgcGFkKG1pbnV0ZXMpICsgXCI6XCIgKyBwYWQoc2Vjb25kcykgKyAnLjAwMCc7XG59XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJWdHRCdWlsZGVyIiwiY291bnRlciIsImNvbnRlbnQiLCJwcm90b3R5cGUiLCJhZGQiLCJmcm9tIiwidG8iLCJsaW5lIiwic2V0dGluZ3MiLCJfdGhpcyIsImxpbmVzIiwiY29uc3RydWN0b3IiLCJBcnJheSIsInRvU3RyaW5nIiwic2Vjb25kc1RvVGltZSIsImZvckVhY2giLCJzZWMiLCJwYWQiLCJudW0iLCJzZWNvbmRzIiwidG9GaXhlZCIsIm1pbnV0ZXMiLCJNYXRoIiwiZmxvb3IiLCJob3VycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polyflix/vtt-parser/dist/models/vtt-builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@polyflix/vtt-parser/dist/models/vtt-file.model.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@polyflix/vtt-parser/dist/models/vtt-file.model.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = this && this.__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar __importDefault = this && this.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.VttFile = void 0;\nvar axios_1 = __importDefault(__webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/index.js\"));\nvar block_model_1 = __webpack_require__(/*! ../models/block.model */ \"(ssr)/./node_modules/@polyflix/vtt-parser/dist/models/block.model.js\");\nvar timestamp_model_1 = __webpack_require__(/*! ./timestamp.model */ \"(ssr)/./node_modules/@polyflix/vtt-parser/dist/models/timestamp.model.js\");\nvar vtt_builder_1 = __webpack_require__(/*! ./vtt-builder */ \"(ssr)/./node_modules/@polyflix/vtt-parser/dist/models/vtt-builder.js\");\n/**\n * Modelize a VttFile.\n * Can be used to parse a VTT file from an URL or from a raw file.\n *\n * @class VttFile\n *\n * @example to parse a VttFile from an URL\n * const vttFile = await VttFile.fromUrl(\"https://example.com/fr.vtt\")\n *\n * @example to parse a VttFile from a raw file\n * const vttFile = VttFile.fromRawFile(`\n * WEBVTT FILE\n * 1\n * 00:00:03.500 --> 00:00:05.000 D:vertical A:start\n * Everyone wants the most from life\n * `)\n */ var VttFile = /** @class */ function() {\n    function VttFile(vttFileRaw, blocks) {\n        this.vttFileRaw = vttFileRaw;\n        this.blocks = blocks;\n    }\n    /**\n     * Parse a VTT file from an URL.\n     * @param {string} url the VTT file URL\n     * @returns {Promise<VttFile>} the parsed vtt file\n     */ VttFile.fromUrl = function(url) {\n        return __awaiter(this, void 0, void 0, function() {\n            var data, err_1;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        _a.trys.push([\n                            0,\n                            2,\n                            ,\n                            3\n                        ]);\n                        return [\n                            4 /*yield*/ ,\n                            axios_1.default.get(url)\n                        ];\n                    case 1:\n                        data = _a.sent().data;\n                        return [\n                            2 /*return*/ ,\n                            VttFile.fromRawFile(data)\n                        ];\n                    case 2:\n                        err_1 = _a.sent();\n                        throw new Error(\"Unable to fetch the VTT file at \" + url);\n                    case 3:\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Parse a VTT file from raw\n     * @param {string} vttFileRaw the VTT file raw\n     * @returns {VttFile} the parsed vtt file\n     */ VttFile.fromRawFile = function(vttFileRaw) {\n        var vttFile = new VttFile(vttFileRaw);\n        var lines = vttFile.asArray();\n        var sections = vttFile.toSections(lines);\n        var processed = vttFile.processFile(sections);\n        return vttFile.setBlocks(processed);\n    };\n    /**\n     * Parse a VTT file from Google API speech to text output\n     * @param {string} googleTranscriptData the google API output\n     * @returns {string} the string content of vtt file\n     */ VttFile.fromGoogleAPI = function(googleTranscriptData) {\n        var counter = 0;\n        var startTime = 0;\n        var endTime = 0;\n        var phrase = \"\";\n        var phraseLength = 10;\n        var start;\n        var results = googleTranscriptData.results;\n        var vttFile = new vtt_builder_1.VttBuilder();\n        for(var i = 0; i < results.length; i++){\n            //loop through each word in each transcript\n            for(var j = 0; j < results[i].alternatives[0].words.length; j++){\n                var startSeconds = JSON.stringify(results[i].alternatives[0].words[j].startTime.seconds.low);\n                var endSeconds = JSON.stringify(results[i].alternatives[0].words[j].endTime.seconds.low);\n                endTime = +endSeconds;\n                var word = JSON.stringify(results[i].alternatives[0].words[j].word);\n                word = word.slice(1, word.length - 1);\n                if (counter % phraseLength == 1) {\n                    //first word in line\n                    startTime = +startSeconds;\n                    phrase = word;\n                }\n                if (counter % phraseLength > 1) {\n                    phrase = phrase.concat(\" \" + word);\n                }\n                if (counter % phraseLength == 0) {\n                    //last word\n                    phrase = phrase.concat(\" \", word);\n                    vttFile.add(+startTime, +endTime, phrase);\n                }\n                counter++;\n            }\n        }\n        return vttFile.add(+startTime, +endTime, phrase);\n    };\n    /**\n     * Get VTT file subtitle blocks.\n     * @returns {Block[] | undefined} the blocks\n     */ VttFile.prototype.getBlocks = function() {\n        return this.blocks;\n    };\n    /**\n     * Get the VTT file content in VTT format.\n     * @returns {string} the VTT file content\n     */ VttFile.prototype.getRaw = function() {\n        return this.vttFileRaw;\n    };\n    /**\n     * Set the VTT file subtitle blocks.\n     * @param {Block[]} blocks an array of blocks\n     * @returns {VttFile} the vtt file instance\n     */ VttFile.prototype.setBlocks = function(blocks) {\n        this.blocks = blocks;\n        return this;\n    };\n    /**\n     * Convert the raw VTT file to an array of string.\n     * @returns {string[]} the array of vtt file lines\n     */ VttFile.prototype.asArray = function() {\n        return this.vttFileRaw.split(/r?\\n/).map(function(line) {\n            return line.replace(\"\\r\", \"\");\n        });\n    };\n    /**\n     * Process the VTT file and build each subtitle block.\n     * @param {string[][]} blocks the sections array\n     * @returns {Block[]} the builded block array\n     */ VttFile.prototype.processFile = function(blocks) {\n        return blocks.map(function(block, index) {\n            var processedCue = block && block.reduce(function(cue, string, index) {\n                if (index === 0 && !string.includes(\"-->\")) {\n                    return cue;\n                }\n                if (!cue.endTime && string.includes(\"-->\")) {\n                    var timestamps = timestamp_model_1.Timestamp.fromRaw(string, \"-->\");\n                    if (timestamps) {\n                        cue.startTime = timestamps.startTime;\n                        cue.endTime = timestamps.endTime;\n                    }\n                    return cue;\n                }\n                cue.text = cue.text + string;\n                return cue;\n            }, block_model_1.Block.default(index));\n            return processedCue;\n        });\n    };\n    /**\n     *\n     * @param lines\n     * @returns\n     */ VttFile.prototype.toSections = function(lines) {\n        return lines.reduce(function(blockArray, currentLine) {\n            if (currentLine === \"\") {\n                blockArray.push([]);\n            } else {\n                blockArray[blockArray.length - 1].push(currentLine);\n            }\n            return blockArray;\n        }, [\n            []\n        ]).filter(function(section) {\n            return section.length;\n        }).filter(function(cueData, index) {\n            var header = cueData[0];\n            return !(header.startsWith(\"WEBVTT\") || header.startsWith(\"NOTE\") || header.startsWith(\"STYLE\"));\n        });\n    };\n    return VttFile;\n}();\nexports.VttFile = VttFile;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@polyflix/vtt-parser/dist/models/vtt-file.model.js\n");

/***/ })

};
;