"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/preact";
exports.ids = ["vendor-chunks/preact"];
exports.modules = {

/***/ "(ssr)/./node_modules/preact/dist/preact.mjs":
/*!*********************************************!*\
  !*** ./node_modules/preact/dist/preact.mjs ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Component: () => (/* binding */ k),\n/* harmony export */   Fragment: () => (/* binding */ _),\n/* harmony export */   cloneElement: () => (/* binding */ E),\n/* harmony export */   createContext: () => (/* binding */ F),\n/* harmony export */   createElement: () => (/* binding */ y),\n/* harmony export */   createRef: () => (/* binding */ d),\n/* harmony export */   h: () => (/* binding */ y),\n/* harmony export */   hydrate: () => (/* binding */ D),\n/* harmony export */   isValidElement: () => (/* binding */ i),\n/* harmony export */   options: () => (/* binding */ l),\n/* harmony export */   render: () => (/* binding */ B),\n/* harmony export */   toChildArray: () => (/* binding */ P)\n/* harmony export */ });\nvar n, l, u, i, t, r, o, f, e, c = {}, s = [], a = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\nfunction h(n, l) {\n    for(var u in l)n[u] = l[u];\n    return n;\n}\nfunction v(n) {\n    var l = n.parentNode;\n    l && l.removeChild(n);\n}\nfunction y(l, u, i) {\n    var t, r, o, f = {};\n    for(o in u)\"key\" == o ? t = u[o] : \"ref\" == o ? r = u[o] : f[o] = u[o];\n    if (arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : i), \"function\" == typeof l && null != l.defaultProps) for(o in l.defaultProps)void 0 === f[o] && (f[o] = l.defaultProps[o]);\n    return p(l, f, t, r, null);\n}\nfunction p(n, i, t, r, o) {\n    var f = {\n        type: n,\n        props: i,\n        key: t,\n        ref: r,\n        __k: null,\n        __: null,\n        __b: 0,\n        __e: null,\n        __d: void 0,\n        __c: null,\n        __h: null,\n        constructor: void 0,\n        __v: null == o ? ++u : o\n    };\n    return null == o && null != l.vnode && l.vnode(f), f;\n}\nfunction d() {\n    return {\n        current: null\n    };\n}\nfunction _(n) {\n    return n.children;\n}\nfunction k(n, l) {\n    this.props = n, this.context = l;\n}\nfunction b(n, l) {\n    if (null == l) return n.__ ? b(n.__, n.__.__k.indexOf(n) + 1) : null;\n    for(var u; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) return u.__e;\n    return \"function\" == typeof n.type ? b(n) : null;\n}\nfunction g(n) {\n    var l, u;\n    if (null != (n = n.__) && null != n.__c) {\n        for(n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) {\n            n.__e = n.__c.base = u.__e;\n            break;\n        }\n        return g(n);\n    }\n}\nfunction m(n) {\n    (!n.__d && (n.__d = !0) && t.push(n) && !w.__r++ || r !== l.debounceRendering) && ((r = l.debounceRendering) || o)(w);\n}\nfunction w() {\n    var n, l, u, i, r, o, e, c;\n    for(t.sort(f); n = t.shift();)n.__d && (l = t.length, i = void 0, r = void 0, e = (o = (u = n).__v).__e, (c = u.__P) && (i = [], (r = h({}, o)).__v = o.__v + 1, L(c, o, r, u.__n, void 0 !== c.ownerSVGElement, null != o.__h ? [\n        e\n    ] : null, i, null == e ? b(o) : e, o.__h), M(i, o), o.__e != e && g(o)), t.length > l && t.sort(f));\n    w.__r = 0;\n}\nfunction x(n, l, u, i, t, r, o, f, e, a) {\n    var h, v, y, d, k, g, m, w = i && i.__k || s, x = w.length;\n    for(u.__k = [], h = 0; h < l.length; h++)if (null != (d = u.__k[h] = null == (d = l[h]) || \"boolean\" == typeof d || \"function\" == typeof d ? null : \"string\" == typeof d || \"number\" == typeof d || \"bigint\" == typeof d ? p(null, d, null, null, d) : Array.isArray(d) ? p(_, {\n        children: d\n    }, null, null, null) : d.__b > 0 ? p(d.type, d.props, d.key, d.ref ? d.ref : null, d.__v) : d)) {\n        if (d.__ = u, d.__b = u.__b + 1, null === (y = w[h]) || y && d.key == y.key && d.type === y.type) w[h] = void 0;\n        else for(v = 0; v < x; v++){\n            if ((y = w[v]) && d.key == y.key && d.type === y.type) {\n                w[v] = void 0;\n                break;\n            }\n            y = null;\n        }\n        L(n, d, y = y || c, t, r, o, f, e, a), k = d.__e, (v = d.ref) && y.ref != v && (m || (m = []), y.ref && m.push(y.ref, null, d), m.push(v, d.__c || k, d)), null != k ? (null == g && (g = k), \"function\" == typeof d.type && d.__k === y.__k ? d.__d = e = A(d, e, n) : e = C(n, d, y, w, k, e), \"function\" == typeof u.type && (u.__d = e)) : e && y.__e == e && e.parentNode != n && (e = b(y));\n    }\n    for(u.__e = g, h = x; h--;)null != w[h] && (\"function\" == typeof u.type && null != w[h].__e && w[h].__e == u.__d && (u.__d = $(i).nextSibling), S(w[h], w[h]));\n    if (m) for(h = 0; h < m.length; h++)O(m[h], m[++h], m[++h]);\n}\nfunction A(n, l, u) {\n    for(var i, t = n.__k, r = 0; t && r < t.length; r++)(i = t[r]) && (i.__ = n, l = \"function\" == typeof i.type ? A(i, l, u) : C(u, i, i, t, i.__e, l));\n    return l;\n}\nfunction P(n, l) {\n    return l = l || [], null == n || \"boolean\" == typeof n || (Array.isArray(n) ? n.some(function(n) {\n        P(n, l);\n    }) : l.push(n)), l;\n}\nfunction C(n, l, u, i, t, r) {\n    var o, f, e;\n    if (void 0 !== l.__d) o = l.__d, l.__d = void 0;\n    else if (null == u || t != r || null == t.parentNode) n: if (null == r || r.parentNode !== n) n.appendChild(t), o = null;\n    else {\n        for(f = r, e = 0; (f = f.nextSibling) && e < i.length; e += 1)if (f == t) break n;\n        n.insertBefore(t, r), o = r;\n    }\n    return void 0 !== o ? o : t.nextSibling;\n}\nfunction $(n) {\n    var l, u, i;\n    if (null == n.type || \"string\" == typeof n.type) return n.__e;\n    if (n.__k) {\n        for(l = n.__k.length - 1; l >= 0; l--)if ((u = n.__k[l]) && (i = $(u))) return i;\n    }\n    return null;\n}\nfunction H(n, l, u, i, t) {\n    var r;\n    for(r in u)\"children\" === r || \"key\" === r || r in l || T(n, r, null, u[r], i);\n    for(r in l)t && \"function\" != typeof l[r] || \"children\" === r || \"key\" === r || \"value\" === r || \"checked\" === r || u[r] === l[r] || T(n, r, l[r], u[r], i);\n}\nfunction I(n, l, u) {\n    \"-\" === l[0] ? n.setProperty(l, null == u ? \"\" : u) : n[l] = null == u ? \"\" : \"number\" != typeof u || a.test(l) ? u : u + \"px\";\n}\nfunction T(n, l, u, i, t) {\n    var r;\n    n: if (\"style\" === l) if (\"string\" == typeof u) n.style.cssText = u;\n    else {\n        if (\"string\" == typeof i && (n.style.cssText = i = \"\"), i) for(l in i)u && l in u || I(n.style, l, \"\");\n        if (u) for(l in u)i && u[l] === i[l] || I(n.style, l, u[l]);\n    }\n    else if (\"o\" === l[0] && \"n\" === l[1]) r = l !== (l = l.replace(/Capture$/, \"\")), l = l.toLowerCase() in n ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + r] = u, u ? i || n.addEventListener(l, r ? z : j, r) : n.removeEventListener(l, r ? z : j, r);\n    else if (\"dangerouslySetInnerHTML\" !== l) {\n        if (t) l = l.replace(/xlink(H|:h)/, \"h\").replace(/sName$/, \"s\");\n        else if (\"width\" !== l && \"height\" !== l && \"href\" !== l && \"list\" !== l && \"form\" !== l && \"tabIndex\" !== l && \"download\" !== l && l in n) try {\n            n[l] = null == u ? \"\" : u;\n            break n;\n        } catch (n) {}\n        \"function\" == typeof u || (null == u || !1 === u && \"-\" !== l[4] ? n.removeAttribute(l) : n.setAttribute(l, u));\n    }\n}\nfunction j(n) {\n    return this.l[n.type + !1](l.event ? l.event(n) : n);\n}\nfunction z(n) {\n    return this.l[n.type + !0](l.event ? l.event(n) : n);\n}\nfunction L(n, u, i, t, r, o, f, e, c) {\n    var s, a, v, y, p, d, b, g, m, w, A, P, C, $, H, I = u.type;\n    if (void 0 !== u.constructor) return null;\n    null != i.__h && (c = i.__h, e = u.__e = i.__e, u.__h = null, o = [\n        e\n    ]), (s = l.__b) && s(u);\n    try {\n        n: if (\"function\" == typeof I) {\n            if (g = u.props, m = (s = I.contextType) && t[s.__c], w = s ? m ? m.props.value : s.__ : t, i.__c ? b = (a = u.__c = i.__c).__ = a.__E : (\"prototype\" in I && I.prototype.render ? u.__c = a = new I(g, w) : (u.__c = a = new k(g, w), a.constructor = I, a.render = q), m && m.sub(a), a.props = g, a.state || (a.state = {}), a.context = w, a.__n = t, v = a.__d = !0, a.__h = [], a._sb = []), null == a.__s && (a.__s = a.state), null != I.getDerivedStateFromProps && (a.__s == a.state && (a.__s = h({}, a.__s)), h(a.__s, I.getDerivedStateFromProps(g, a.__s))), y = a.props, p = a.state, a.__v = u, v) null == I.getDerivedStateFromProps && null != a.componentWillMount && a.componentWillMount(), null != a.componentDidMount && a.__h.push(a.componentDidMount);\n            else {\n                if (null == I.getDerivedStateFromProps && g !== y && null != a.componentWillReceiveProps && a.componentWillReceiveProps(g, w), !a.__e && null != a.shouldComponentUpdate && !1 === a.shouldComponentUpdate(g, a.__s, w) || u.__v === i.__v) {\n                    for(u.__v !== i.__v && (a.props = g, a.state = a.__s, a.__d = !1), a.__e = !1, u.__e = i.__e, u.__k = i.__k, u.__k.forEach(function(n) {\n                        n && (n.__ = u);\n                    }), A = 0; A < a._sb.length; A++)a.__h.push(a._sb[A]);\n                    a._sb = [], a.__h.length && f.push(a);\n                    break n;\n                }\n                null != a.componentWillUpdate && a.componentWillUpdate(g, a.__s, w), null != a.componentDidUpdate && a.__h.push(function() {\n                    a.componentDidUpdate(y, p, d);\n                });\n            }\n            if (a.context = w, a.props = g, a.__P = n, P = l.__r, C = 0, \"prototype\" in I && I.prototype.render) {\n                for(a.state = a.__s, a.__d = !1, P && P(u), s = a.render(a.props, a.state, a.context), $ = 0; $ < a._sb.length; $++)a.__h.push(a._sb[$]);\n                a._sb = [];\n            } else do {\n                a.__d = !1, P && P(u), s = a.render(a.props, a.state, a.context), a.state = a.__s;\n            }while (a.__d && ++C < 25);\n            a.state = a.__s, null != a.getChildContext && (t = h(h({}, t), a.getChildContext())), v || null == a.getSnapshotBeforeUpdate || (d = a.getSnapshotBeforeUpdate(y, p)), H = null != s && s.type === _ && null == s.key ? s.props.children : s, x(n, Array.isArray(H) ? H : [\n                H\n            ], u, i, t, r, o, f, e, c), a.base = u.__e, u.__h = null, a.__h.length && f.push(a), b && (a.__E = a.__ = null), a.__e = !1;\n        } else null == o && u.__v === i.__v ? (u.__k = i.__k, u.__e = i.__e) : u.__e = N(i.__e, u, i, t, r, o, f, c);\n        (s = l.diffed) && s(u);\n    } catch (n) {\n        u.__v = null, (c || null != o) && (u.__e = e, u.__h = !!c, o[o.indexOf(e)] = null), l.__e(n, u, i);\n    }\n}\nfunction M(n, u) {\n    l.__c && l.__c(u, n), n.some(function(u) {\n        try {\n            n = u.__h, u.__h = [], n.some(function(n) {\n                n.call(u);\n            });\n        } catch (n) {\n            l.__e(n, u.__v);\n        }\n    });\n}\nfunction N(l, u, i, t, r, o, f, e) {\n    var s, a, h, y = i.props, p = u.props, d = u.type, _ = 0;\n    if (\"svg\" === d && (r = !0), null != o) {\n        for(; _ < o.length; _++)if ((s = o[_]) && \"setAttribute\" in s == !!d && (d ? s.localName === d : 3 === s.nodeType)) {\n            l = s, o[_] = null;\n            break;\n        }\n    }\n    if (null == l) {\n        if (null === d) return document.createTextNode(p);\n        l = r ? document.createElementNS(\"http://www.w3.org/2000/svg\", d) : document.createElement(d, p.is && p), o = null, e = !1;\n    }\n    if (null === d) y === p || e && l.data === p || (l.data = p);\n    else {\n        if (o = o && n.call(l.childNodes), a = (y = i.props || c).dangerouslySetInnerHTML, h = p.dangerouslySetInnerHTML, !e) {\n            if (null != o) for(y = {}, _ = 0; _ < l.attributes.length; _++)y[l.attributes[_].name] = l.attributes[_].value;\n            (h || a) && (h && (a && h.__html == a.__html || h.__html === l.innerHTML) || (l.innerHTML = h && h.__html || \"\"));\n        }\n        if (H(l, p, y, r, e), h) u.__k = [];\n        else if (_ = u.props.children, x(l, Array.isArray(_) ? _ : [\n            _\n        ], u, i, t, r && \"foreignObject\" !== d, o, f, o ? o[0] : i.__k && b(i, 0), e), null != o) for(_ = o.length; _--;)null != o[_] && v(o[_]);\n        e || (\"value\" in p && void 0 !== (_ = p.value) && (_ !== l.value || \"progress\" === d && !_ || \"option\" === d && _ !== y.value) && T(l, \"value\", _, y.value, !1), \"checked\" in p && void 0 !== (_ = p.checked) && _ !== l.checked && T(l, \"checked\", _, y.checked, !1));\n    }\n    return l;\n}\nfunction O(n, u, i) {\n    try {\n        \"function\" == typeof n ? n(u) : n.current = u;\n    } catch (n) {\n        l.__e(n, i);\n    }\n}\nfunction S(n, u, i) {\n    var t, r;\n    if (l.unmount && l.unmount(n), (t = n.ref) && (t.current && t.current !== n.__e || O(t, null, u)), null != (t = n.__c)) {\n        if (t.componentWillUnmount) try {\n            t.componentWillUnmount();\n        } catch (n) {\n            l.__e(n, u);\n        }\n        t.base = t.__P = null, n.__c = void 0;\n    }\n    if (t = n.__k) for(r = 0; r < t.length; r++)t[r] && S(t[r], u, i || \"function\" != typeof n.type);\n    i || null == n.__e || v(n.__e), n.__ = n.__e = n.__d = void 0;\n}\nfunction q(n, l, u) {\n    return this.constructor(n, u);\n}\nfunction B(u, i, t) {\n    var r, o, f;\n    l.__ && l.__(u, i), o = (r = \"function\" == typeof t) ? null : t && t.__k || i.__k, f = [], L(i, u = (!r && t || i).__k = y(_, null, [\n        u\n    ]), o || c, c, void 0 !== i.ownerSVGElement, !r && t ? [\n        t\n    ] : o ? null : i.firstChild ? n.call(i.childNodes) : null, f, !r && t ? t : o ? o.__e : i.firstChild, r), M(f, u);\n}\nfunction D(n, l) {\n    B(n, l, D);\n}\nfunction E(l, u, i) {\n    var t, r, o, f = h({}, l.props);\n    for(o in u)\"key\" == o ? t = u[o] : \"ref\" == o ? r = u[o] : f[o] = u[o];\n    return arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : i), p(l.type, f, t || l.key, r || l.ref, null);\n}\nfunction F(n, l) {\n    var u = {\n        __c: l = \"__cC\" + e++,\n        __: n,\n        Consumer: function(n, l) {\n            return n.children(l);\n        },\n        Provider: function(n) {\n            var u, i;\n            return this.getChildContext || (u = [], (i = {})[l] = this, this.getChildContext = function() {\n                return i;\n            }, this.shouldComponentUpdate = function(n) {\n                this.props.value !== n.value && u.some(function(n) {\n                    n.__e = !0, m(n);\n                });\n            }, this.sub = function(n) {\n                u.push(n);\n                var l = n.componentWillUnmount;\n                n.componentWillUnmount = function() {\n                    u.splice(u.indexOf(n), 1), l && l.call(n);\n                };\n            }), n.children;\n        }\n    };\n    return u.Provider.__ = u.Consumer.contextType = u;\n}\nn = s.slice, l = {\n    __e: function(n, l, u, i) {\n        for(var t, r, o; l = l.__;)if ((t = l.__c) && !t.__) try {\n            if ((r = t.constructor) && null != r.getDerivedStateFromError && (t.setState(r.getDerivedStateFromError(n)), o = t.__d), null != t.componentDidCatch && (t.componentDidCatch(n, i || {}), o = t.__d), o) return t.__E = t;\n        } catch (l) {\n            n = l;\n        }\n        throw n;\n    }\n}, u = 0, i = function(n) {\n    return null != n && void 0 === n.constructor;\n}, k.prototype.setState = function(n, l) {\n    var u;\n    u = null != this.__s && this.__s !== this.state ? this.__s : this.__s = h({}, this.state), \"function\" == typeof n && (n = n(h({}, u), this.props)), n && h(u, n), null != n && this.__v && (l && this._sb.push(l), m(this));\n}, k.prototype.forceUpdate = function(n) {\n    this.__v && (this.__e = !0, n && this.__h.push(n), m(this));\n}, k.prototype.render = _, t = [], o = \"function\" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, f = function(n, l) {\n    return n.__v.__b - l.__v.__b;\n}, w.__r = 0, e = 0;\n //# sourceMappingURL=preact.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/preact/dist/preact.mjs\n");

/***/ })

};
;